{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/movie.service.ts","webpack:///./src/app/recommend/recommend.component.css","webpack:///./src/app/recommend/recommend.component.html","webpack:///./src/app/recommend/recommend.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"a {\\n    cursor: pointer;\\n}\"","module.exports = \"<!-- src/app/app.component.html -->\\n\\n<nav class=\\\"navbar navbar-expand-md bg-dark navbar-dark\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">KnowYourMovie</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"auth.isAuthenticated()\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"home()\\\"><img class=\\\"img-fluid rounded-circle float-right\\\" width=\\\"8%\\\"  src=\\\"{{pic}}\\\"></a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!auth.isAuthenticated()\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"login()\\\">Log In</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"auth.isAuthenticated()\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"recommendMovies()\\\">Recommend Movies</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"auth.isAuthenticated()\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"logout()\\\" data-toggle=\\\"modal\\\" data-target=\\\"#logoutModal\\\">Log Out</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"https://www.linkedin.com/in/ankur-sharma-341446b1/\\\">Contact Me</a>\\n      </li>\\n\\n    </ul>\\n    <ul>\\n    </ul>\\n  </div>\\n</nav>\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"logoutModal\\\" tabindex=\\\"-1\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">KnowYourMovie</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        You have been Successfully Logged Out!!\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <a href=\\\"\\\" routerLink=\\\"/\\\" data-dismiss=\\\"modal\\\">Go To HomePage</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<img class=\\\"img-fluid\\\" *ngIf=\\\"!auth.isAuthenticated()\\\" src=\\\"assets/images/years-for-movies.jpg\\\">\\n<div>\\n<router-outlet></router-outlet>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  constructor(private auth: AuthService, private router: Router){}\n  title = 'knowYourMovie';\n  pic: string;\n  isAuthenticated = false;\n  getAuth: any;\n  ngOnInit(){\n    this.auth.currentProfile.subscribe((pic)=>this.pic = pic )\n    //this.getAuth = setInterval(()=>{this.isAuthenticated = this.auth.isAuthenticated()},200)\n  }\n  login(){\n      this.auth.login();\n\t//this.router.navigate([\"/home\"]);\n  }\n  home(){\n    this.router.navigate([\"/home\"]);\n  }\n  recommendMovies(){\n    this.router.navigate(['/recommend']);\n  }\n  logout(){\n    this.auth.logout();\n    \n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { StarRatingModule } from 'angular-star-rating';\nimport { AuthService } from './auth.service'; \nimport { MovieService } from './movie.service';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { RecommendComponent } from './recommend/recommend.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,HomeComponent, RecommendComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    StarRatingModule,\n    RouterModule.forRoot(\n      [\n        {path: \"home\", component: HomeComponent},\n        {path: \"recommend\", component: RecommendComponent}\n      ]\n    )\n  ],\n  providers: [AuthService, MovieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as auth0 from 'auth0-js';\n//import { Auth0Lock } from 'auth0-lock';\n//import { tokenNotExpired } from 'angular2-jwt'; \n//import { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n(window as any).global = window;\n\n//const Auth0Lock = require('auth0-lock').default;\n@Injectable()\nexport class AuthService {\n    auth0 = new auth0.WebAuth({\n        clientID: 'PKKzo3TocEJ8lhPXgBIjuGZsxRdoJVL9',\n        domain: 'swiftapps.auth0.com',\n        responseType: 'token id_token',\n        redirectUri: 'http://localhost:4200/home',\n        scope: 'openid email profile'\n    });\n    userProfile: any;\n    //lock = new Auth0Lock('PKKzo3TocEJ8lhPXgBIjuGZsxRdoJVL9','swiftapps.auth0.com', {});\n    constructor(public router: Router) {\n        // this.lock.on('authenticated',(authResult: any) => {\n        //     this.lock.getProfile(authResult.idToken,function(error:any,profile: any){\n        //         if(error){\n        //             throw new Error(error);\n        //         }\n        //         localStorage.setItem('id_token',authResult.idToken);\n        //         localStorage.setItem('profile',JSON.stringify(profile));\n        //     });\n            \n        // })\n     }\n\n    public login(): void {\n        this.auth0.authorize();\n    }\n \n    private setSession(authResult): void {\n        // Set the time that the Access Token will expire at\n        const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n        localStorage.setItem('access_token', authResult.accessToken);\n        localStorage.setItem('id_token', authResult.idToken);\n        localStorage.setItem('expires_at', expiresAt);\n      }\n      public logout(): void {\n        // Remove tokens and expiry time from localStorage\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('id_token');\n        localStorage.removeItem('expires_at');\n        localStorage.removeItem('user_details');\n        // Go back to the home route\n        //this.router.navigate([{outlets: {primary: 'path',logout: 'path'}}]);\n        //this.router.navigate([\"/\"]);\n      }\n      public isAuthenticated(): boolean {\n        // Check whether the current time is past the\n        // Access Token's expiry time\n        const expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n        return new Date().getTime() < expiresAt;\n      }\n      public handleAuthentication(): Promise<any> {\n        return new Promise((resolve,reject) =>{\n        this.auth0.parseHash((err, authResult) => {\n          if (authResult && authResult.accessToken && authResult.idToken) {\n            window.location.hash = '';\n            this.setSession(authResult);\n            this.auth0.client.userInfo(authResult.accessToken, (err, user) =>{\n                localStorage.setItem(\"user_details\",JSON.stringify(user));\n                resolve();\n            });\n          } else if (err) {\n            this.router.navigate(['/']);\n            console.log(err);\n            reject();\n          }\n        });\n    });\n      }\n      public getProfile(cb): void {\n        const accessToken = localStorage.getItem('access_token');\n        if (!accessToken) {\n          throw new Error('Access Token must exist to fetch profile');\n        }\n      \n        const self = this;\n        this.auth0.client.userInfo(accessToken, (err, profile) => {\n          if (profile) {\n            self.userProfile = profile;\n          }\n          cb(err, profile);\n        });\n      }\n      private profileSource = new BehaviorSubject('');\n      currentProfile = this.profileSource.asObservable();\n\n      changeProfile(pic: string){\n          this.profileSource.next(pic);\n      }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\" *ngIf=\\\"profile\\\">\\n  <h4>Hello, {{profile.name}}</h4>\\n  <p>Let's rate some movies:</p>\\n  <hr />\\n  <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"searchMovie(myForm.value)\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Search..\\\" name=\\\"search\\\" [formControl]=\\\"myForm.controls['search']\\\">\\n    <button type=\\\"submit\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n  </form>\\n  <br />\\n</div>\\n<!--\\n<div class=\\\"container-fluid\\\" *ngIf=\\\"searchResults\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\" *ngFor=\\\"let is of searchResults.results\\\">\\n      <table style=\\\"border: 3px solid black;\\\" width=\\\"100%\\\">\\n        <tr>\\n          <td style=\\\"border: 3px solid black;\\\">\\n            <div class=\\\"col-sm-2\\\">\\n            <img src=\\\"https://image.tmdb.org/t/p/w200/{{is.poster_path}}\\\">\\n            </div>\\n            <div class=\\\"col-sm-10\\\">\\n              <h4>{{is.title}}(Release Date: {{is.release_date}})</h4>\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <p><i>{{is.overview}}</i></p>\\n                </div>\\n              </div>\\n            </div>\\n          </td>\\n        </tr>\\n      </table>\\n\\n    </div>\\n    <hr />\\n  </div>\\n-->\\n<div *ngIf=\\\"searchResults\\\">\\n  <div class=\\\"card container-fluid\\\" *ngFor=\\\"let is of searchResults.results\\\">\\n    <form [formGroup]=\\\"reviewForm\\\" (ngSubmit)=\\\"submitRating()\\\">\\n      <img width=\\\"20%\\\" height=\\\"40%\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{is.poster_path}}\\\" alt=\\\"image not available\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{is.title}}(Release Date: {{is.release_date}})</h5>\\n        <p class=\\\"card-text\\\"><i>{{is.overview}}</i></p>\\n        <p class=\\\"card-text\\\">Your Rating:</p>\\n        <div *ngIf=\\\"moviesRated!='norecords' && moviesRated.hasOwnProperty(is.id)\\\" class=\\\"pull-left\\\">\\n\\n          <star-rating-comp [starType]=\\\"'svg'\\\" [rating]=\\\"moviesRated[is.id]\\\" (onClick)=\\\"onClick($event,is.id,is.poster_path,is.overview)\\\"></star-rating-comp>\\n        </div>\\n        <div *ngIf=\\\"moviesRated=='norecords' || (moviesRated && (!moviesRated.hasOwnProperty(is.id)))\\\" class=\\\"pull-left\\\">\\n          <star-rating-comp [starType]=\\\"'svg'\\\" [rating]=\\\"0\\\" (onClick)=\\\"onClick($event,is.id,is.poster_path,is.overview)\\\"></star-rating-comp>\\n        </div>\\n        <div class=\\\"pull-left\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"selectedId == is.id\\\">Submit Review</button>\\n          <br />\\n          <span *ngIf=\\\"ratingResponse && ratingResponse.id == is.id\\\" class=\\\"badge badge-success\\\">Review Submitted!!</span>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MovieService } from '../movie.service';\nimport { IStarRatingOnClickEvent } from \"angular-star-rating/src/star-rating-struct\";\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  myForm: FormGroup;\n  reviewForm: FormGroup;\n  profile: any;\n  searchResults: any;\n  isRated: boolean;\n  selectedId: any;\n  ratingObject: Object = { \"id\": '', \"rating\": '', \"email\": '' };\n  ratingResponse;\n  moviesRated: any;\n  constructor(private auth: AuthService, fb: FormBuilder, private ms: MovieService, private http: HttpClient, private router: Router) {\n    //console.log(\"In Constructor::\",JSON.parse(localStorage.getItem('user_details')));\n    this.auth.handleAuthentication().then(() => {\n      this.profile = JSON.parse(localStorage.getItem('user_details'));\n      this.auth.changeProfile(this.profile[\"picture\"]);\n      this.ratingObject[\"nickname\"] = this.profile.nickname;\n    });\n    this.myForm = fb.group({\n      'search': ['', Validators.required]\n    });\n    this.reviewForm = fb.group({\n      'rating': ['']\n    })\n  }\n  ngOnInit() {\n    this.profile = JSON.parse(localStorage.getItem('user_details'));\n    if (this.profile) {\n      this.ratingObject[\"nickname\"] = this.profile.nickname;\n      this.ms.ratedMovies(this.profile.nickname).subscribe((res: Response)=>{\n        this.moviesRated=res;\n        console.log(\"Rated Movies::\",this.moviesRated);\n\n      });\n    }\n  }\n\n  searchMovie(movieName: any) {\n    this.selectedId = 0;\n    this.ratingResponse = null;\n    this.ms.searchMovie(movieName[\"search\"]).subscribe((res: Response) => {\n      this.searchResults = res;\n    });\n    this.ms.ratedMovies(this.profile.nickname).subscribe((res: Response)=>{\n       if(res[\"norecords\"] == 1)\n           this.moviesRated=\"norecords\";\n       else\n           this.moviesRated=res;\n    });\n  }\n\n  onClickResult: IStarRatingOnClickEvent;\n\n  onClick = ($event: IStarRatingOnClickEvent, id: any, poster: any, desc: any) => {\n    this.selectedId = id;\n    this.ratingObject[\"id\"] = this.selectedId;\n    this.ratingObject[\"rating\"] = $event.rating;\n    this.ratingObject[\"poster\"] = poster;\n    this.ratingObject[\"overview\"] = desc;\n  };\n  submitRating() {\n    var httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.http.post(\n      'http://ec2-54-244-2-94.us-west-2.compute.amazonaws.com:6205/submitreview', this.ratingObject, httpOptions)\n      .subscribe((res: Response) => {\n        this.ratingResponse = res;\n\n      });\n  }\n\n\n\n}\n\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  imgArray: string[] = [];\n\n  constructor(public http: HttpClient) {\n\n  }\n  searchMovie(name: string): Observable<any> {\n    var url = `https://api.themoviedb.org/3/search/movie?api_key=98c3f8bd00e0a1138dccdc4dc8a7d1b9&language=en-US&query=${name}&page=1&include_adult=false`\n    return this.http.get(url);\n  }\n\n  submitRating(ratingObj: any): void {\n\n  }\n\n  recommendMovies(person: string) {\n    var recommendObject = {\n      \"nickname\": person\n    }\n    var movies: any;\n    var httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post('http://ec2-54-244-2-94.us-west-2.compute.amazonaws.com:6205/recommendMovies', recommendObject, httpOptions)\n  }\n\n  ratedMovies(person: string){\n    var url = `http://ec2-54-244-2-94.us-west-2.compute.amazonaws.com:6205/getRatedMovies?person=${person}`\n    return this.http.get(url);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"imgArray.length == 0\\\">\\n  <h2> We couldn't find movies that match your taste! Try rating some more movies.</h2>\\n</div>\\n<div *ngIf=\\\"imgArray.length>0\\\">\\n<h2>Here is a list of recommended movies for you!!</h2>\\n<div class=\\\"card container-fluid\\\" *ngFor=\\\"let ia of imgArray\\\">\\n  <img width=\\\"20%\\\" height=\\\"40%\\\" src=\\\"https://image.tmdb.org/t/p/w500/{{ia.poster_path}}\\\" alt=\\\"image not available\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{ia.title}}(Release Date: {{ia.release_date}})</h5>\\n    <p class=\\\"card-text\\\"><i>{{ia.overview}}</i></p>\\n  </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MovieService } from '../movie.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-recommend',\n  templateUrl: './recommend.component.html',\n  styleUrls: ['./recommend.component.css']\n})\nexport class RecommendComponent implements OnInit {\n  profile: any;\n  recommendedMovies: any;\n  images: any;\n  movies: any;\n  imgArray: any[] = []\n\n  constructor(private ms: MovieService, private http: HttpClient) { }\n\n  ngOnInit() {\n\n    this.profile = JSON.parse(localStorage.getItem('user_details'));\n    this.ms.recommendMovies(this.profile[\"nickname\"])\n      .subscribe((res: Response) => {\n        this.movies = res;\n        this.movies.forEach(movieId => {\n          var url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=98c3f8bd00e0a1138dccdc4dc8a7d1b9&language=en-US`\n          this.http.get(url)\n            .subscribe((mRes: Response) => {\n              this.imgArray.push(mRes)\n            })\n        });\n      })\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\ndeclare let cordova: any;\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\nlet onDeviceReady = () => {\n  window.open = cordova.InAppBrowser.open;\n};\ndocument.addEventListener('deviceready', onDeviceReady, false);\n"],"sourceRoot":""}